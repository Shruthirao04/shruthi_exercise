<?php

/**
 * @file
 * Update => module reinstallation not required.
 */

/**
 * Implements hook_schema().
 */
function shruthi_exercise_schema() {
  // Creates a table structure in the database.
  // Name of the schema is user-details.
  $schema['user_details'] = [
  // Desc fo the table.
    'description' => 'Stores user details',
    'fields' => [
      'id' => [
  // First field which is auto increment and not null.
        'description' => 'serial number',
        'type' => 'serial',
        'not null' => TRUE,
      ],
      // Fields same as the fields in custom form.
      'subject' => [
        'description' => 'subject of the user',
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
      ],
      // Fields same as the fields in custom form.
      'department' => [
        'description' => 'Last Name of the user',
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
      ],
      // Fields same as the fields in custom form.
      'email' => [
        'description' => 'Email of the user',
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
      ],
      // Fields same as the fields in custom form.
      'age' => [
        'description' => 'age of the user',
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['id'],
  ];
  return $schema;
}

/**
 * Implement hook_update_N().
 */

/**
 * TO MAKE CHANGES ON CONFIG FORM.
 */
function shruthi_exercise_update_100308() {
  /* $config = \Drupal::configFactory()->getEditable('shruthi_exercise.settings'); */
  // $config->set('email','shruthirao8042@gmail.com');
  // $config->save();
  $query = \Drupal::entityQuery('node')->condition('type', 'article')->accessCheck(TRUE);
  $nids = $query->execute();
  $nodes = Node::loadMultiple($nids);
  foreach ($nodes as $node) {
    $node->set("title", strtoupper("new value"));
    $node->save();
  }
  \Drupal::messenger()->addMessage('Article title updated');

}

/**
 * Implements hook_update_N().
 *
 * Create the tables for country, state, and district.
 */
function dependent_update_100411() {
  $schema = Database::getConnection()->schema();
  $connection = Database::getConnection();

  // Create country table.
  if (!$schema->tableExists('country')) {
    $table = [
      'description' => 'Country table',
      'fields' => [
        'id' => [
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
        'name' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
      ],
      'primary key' => ['id'],
    ];
    $schema->createTable('country', $table);
  }

  // Create state table.
  if (!$schema->tableExists('state')) {
    $table = [
      'description' => 'State table',
      'fields' => [
        'id' => [
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
        'country_id' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'Foreign key to country table',
        ],
        'name' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
      ],
      'primary key' => ['id'],
      'foreign keys' => [
        'country_id' => [
          'table' => 'country',
          'columns' => ['country_id' => 'id'],
        ],
      ],
    ];
    $schema->createTable('state', $table);
  }

  // Create district table.
  if (!$schema->tableExists('district')) {
    $table = [
      'description' => 'District table',
      'fields' => [
        'id' => [
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ],
        'state_id' => [
          'type' => 'int',
          'not null' => TRUE,
          'description' => 'Foreign key to state table',
        ],
        'name' => [
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
      ],
      'primary key' => ['id'],
      'foreign keys' => [
        'state_id' => [
          'table' => 'state',
          'columns' => ['state_id' => 'id'],
        ],
      ],
    ];
    $schema->createTable('district', $table);
  }

  // Insert values into the country table.
  $connection->insert('country')
    ->fields(['name'])
    ->values(['america'])
    ->values(['india'])
    ->execute();

  // Insert values into the state table.
  $connection->insert('state')
    ->fields(['country_id', 'name'])
    ->values([1, 'karnataka'])
    ->values([1, 'maharashtra'])
    ->values([2, 'jammu'])
    ->execute();

  // Insert values into the district table.
  $connection->insert('district')
    ->fields(['state_id', 'name'])
    ->values([1, 'udupi'])
    ->values([1, 'mangalore'])
    ->values([2, 'pune'])
    ->values([2, 'srinagar'])
    ->execute();
}
